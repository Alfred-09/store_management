#d端口
server:
  port: 8081
spring:
  datasource: #数据源配置
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/alfred_erp?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=UTC
    username: root
    password: 1234
    druid:
      max-active: 20
      min-idle: 5
      max-wait: 5000
      initial-size: 5
      validation-query: select 1
      stat-view-servlet:
        enabled: true
  activiti:
    db-history-used: true  #使用历史表，如果不配置，则工程启动后可以检查数据库，只建立了17张表，历史表没有建立
    history-level: full    #记录全部历史操作
    database-schema-update: true    #自动建表
    #    flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常。
    #    true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建。
    #    create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）。
    #    drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎

    check-process-definitions: false # 自动部署验证设置:true-开启（默认）、false-关闭  在resource目录下添加processes文件夹，并且文件夹不能为空
    #    main:
    #      allow-bean-definition-overriding: true #当遇到同样名字的时候，是否允许覆盖注册
    database-schema: atc  #置建表策略，如果
#        login-username: admin
#        login-password: 123456
#        allow:
#        deny:

  jackson:
    date-format: yyyy:MM-dd HH:mm:ss
    time-zone: GMT+8

  redis:
    host: 127.0.0.1
    port: 6379
    jedis:
      pool:
        max-active: 20
        max-idle: 8
        min-idle: 0
        max-wait: 2000
#shiro的配置
shiro:
  hash-algorithm-name: md5
  hash-iterations: 2
  login-url: /index.html
  unauthorized-url: /unauthorized.html
  anon-urls:
#    放行
    - /login/doLogin*
    - /druid/**
    - /login/captcha
  logout-url: /login/logout*
  authc-urls:
    - /**
#mybatisplus的配置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:mapper/*/*Mapper.xml


#fastDfs
fdfs:
  so-timeout: 2500 #读取的时间
  connect-timeout: 600 #连接超时的时间
  thumb-image: #图片的宽高
    width: 100
    height: 100
  tracker-list:  #服务器配置地址列表
    - 47.93.120.202:22122
upload:
  base-url: 47.93.120.202/
  allow-types:
    - image/jpeg
    - image/png
    - image/bmp
    - image/jpg



